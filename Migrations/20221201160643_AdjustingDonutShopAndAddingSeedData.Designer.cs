// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rexfinder_api.Migrations;

#nullable disable

namespace rexfinderapi.Migrations
{
    [DbContext(typeof(MyPlacesDbContext))]
    [Migration("20221201160643_AdjustingDonutShopAndAddingSeedData")]
    partial class AdjustingDonutShopAndAddingSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("rexfinder_api.Models.DonutShop", b =>
                {
                    b.Property<int>("DonutShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DonutShopAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("DonutShopCityState")
                        .HasColumnType("TEXT");

                    b.Property<string>("DonutShopName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DonutShopWebsite")
                        .HasColumnType("TEXT");

                    b.HasKey("DonutShopId");

                    b.ToTable("DonutShop");

                    b.HasData(
                        new
                        {
                            DonutShopId = 1,
                            DonutShopAddress = "1900 Eastland Ave Suite 101",
                            DonutShopCityState = "Nashville TN",
                            DonutShopName = "Five Daughters Bakery",
                            DonutShopWebsite = "https://fivedaughtersbakery.com/"
                        },
                        new
                        {
                            DonutShopId = 2,
                            DonutShopAddress = "1313 Shasta St",
                            DonutShopCityState = "Redding CA",
                            DonutShopName = "Heavenly Donuts",
                            DonutShopWebsite = "https://www.heavenlydonut.com/"
                        },
                        new
                        {
                            DonutShopId = 3,
                            DonutShopAddress = "6855 35th Ave NE ",
                            DonutShopCityState = "Seattle WA",
                            DonutShopName = "Top Pot Doughnuts",
                            DonutShopWebsite = "https://www.toppotdoughnuts.com/"
                        },
                        new
                        {
                            DonutShopId = 4,
                            DonutShopAddress = "1575 Broadway ",
                            DonutShopCityState = "Saugus MA",
                            DonutShopName = "Kanes Donuts",
                            DonutShopWebsite = "https://www.kanesdonuts.com/"
                        },
                        new
                        {
                            DonutShopId = 5,
                            DonutShopAddress = "3455 East Market St ",
                            DonutShopCityState = "York PA",
                            DonutShopName = "Maple Donuts",
                            DonutShopWebsite = "https://www.mapledonuts.com/"
                        },
                        new
                        {
                            DonutShopId = 6,
                            DonutShopAddress = "1311 Memorial Blvd ",
                            DonutShopCityState = "Murfreesboro TN",
                            DonutShopName = "Donut Country",
                            DonutShopWebsite = "https://www.donutcountry.com/"
                        },
                        new
                        {
                            DonutShopId = 7,
                            DonutShopAddress = "98 South Broadway Avenue ",
                            DonutShopCityState = "Denver CO",
                            DonutShopName = "Voodoo Doughnuts",
                            DonutShopWebsite = "https://www.voodoodoughnut.com/"
                        },
                        new
                        {
                            DonutShopId = 8,
                            DonutShopAddress = "10876 N 32nd St ",
                            DonutShopCityState = "Pheonix AZ",
                            DonutShopName = "BoSa Donuts",
                            DonutShopWebsite = "https://bosadonutsaz.com/"
                        },
                        new
                        {
                            DonutShopId = 9,
                            DonutShopAddress = "1998 N High ",
                            DonutShopCityState = "Columbus OH",
                            DonutShopName = "Buckeye Donuts",
                            DonutShopWebsite = "https://buckeyedonuts.net/"
                        },
                        new
                        {
                            DonutShopId = 10,
                            DonutShopAddress = "1710 Kenilworth Ave Suite 220 ",
                            DonutShopCityState = "Charlotte NC",
                            DonutShopName = "Duck Donuts",
                            DonutShopWebsite = "https://www.duckdonuts.com/charlotte/"
                        },
                        new
                        {
                            DonutShopId = 11,
                            DonutShopAddress = "175 S Fairfax Ave Unit D ",
                            DonutShopCityState = "Los Angeles CA",
                            DonutShopName = "Sidecar Doughnuts",
                            DonutShopWebsite = "https://sidecardoughnuts.com/"
                        },
                        new
                        {
                            DonutShopId = 12,
                            DonutShopAddress = "727 Manhattan Ave ",
                            DonutShopCityState = "Brooklyn NY",
                            DonutShopName = "Peter Pan Donut & Pastry Shop",
                            DonutShopWebsite = "https://www.peterpandonuts.com/"
                        });
                });

            modelBuilder.Entity("rexfinder_api.Models.MyPlace", b =>
                {
                    b.Property<int>("MyPlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GooglePlaceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Visited")
                        .HasColumnType("INTEGER");

                    b.HasKey("MyPlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("MyPlaces");
                });

            modelBuilder.Entity("rexfinder_api.Models.UserV1", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("rexfinder_api.Models.MyPlace", b =>
                {
                    b.HasOne("rexfinder_api.Models.UserV1", "User")
                        .WithMany("MyPlaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("rexfinder_api.Models.UserV1", b =>
                {
                    b.Navigation("MyPlaces");
                });
#pragma warning restore 612, 618
        }
    }
}
